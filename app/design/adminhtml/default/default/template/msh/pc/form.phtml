<?php
$_products = $this->GetDependentProducts();
$_profile = $this->_getProfile();
?>
<script src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.15/angular.js"></script>
<script src="//angular-ui.github.io/bootstrap/ui-bootstrap-tpls-0.12.0.js"></script>
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
<link href="<?php echo Mage::getBaseUrl('skin'); ?>frontend/rwd/default/css/bootstrap-modals.css" rel="stylesheet">
<script src="<?php echo Mage::getBaseUrl('js'); ?>config.js"></script>
<script>
    'use strict';

    var app = angular.module('app', ['ui.bootstrap'])
        .controller('RuleCtrl', ['$scope', '$http', '$rootScope', function($scope, $http, $rootScope)
        {
            $scope.rules                = [];
            $scope.operators            = [{ name: "Has a" },{ name: "Has Not a" }];
            $scope.sectionOption        = undefined;
            $scope.attributeOption      = undefined;
            $scope.operatorOption       = undefined;
            $scope.valueOption          = undefined;
            $scope.ids                  = $scope.id.split('-');
            $scope.targetOptionValue    = {id: 1, name: "Hybrid Rake"}; // this should be driven by the option_value context




            $scope.add = function()
            {
                $http({
                    url: Config.defaultPath + 'index.php/boatbuilder/ajax/addrule',
                    method: "POST",
                    data: {
                        profileId           : $scope.ids[0],
                        optionId            : $scope.ids[1],
                        optionValueId       : $scope.ids[2],
                        operator            : $scope.operatorOption.name,
                        targetEntityId      : $scope.sectionOption.id,
                        targetOptionId      : $scope.attributeOption.id,
                        targetOptionValueId : $scope.valueOption.id
                    },
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                    }
                })
                    .success(function (data, status, headers) {
                        if(data.status === 'success'){
                            $scope.rules.push(
                                {
                                    section     : angular.copy($scope.sectionOption),
                                    operator    : angular.copy($scope.operatorOption),
                                    attribute   : angular.copy($scope.attributeOption),
                                    value       : angular.copy($scope.valueOption),
                                    id          : data.id
                                });
                        }
                    })
                    .error(function (data, status, headers, config) {
                        console.log('error loading');
                    });
            };

            $scope.removeListItem = function(item)
            {
                $http({
                    url: Config.defaultPath + 'index.php/boatbuilder/ajax/removerule',
                    method: "POST",
                    data: {
                        ruleId : item.id,
                    },
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                    }
                })
                    .success(function (data, status, headers) {
                        if(data.status === 'success'){
                            var index = $scope.rules.indexOf(item);
                            $scope.rules.splice(index, 1);
                        }
                    })
                    .error(function (data, status, headers, config) {
                        console.log('error loading');
                    });
            };

            $http({
                url: Config.defaultPath + 'index.php/boatbuilder/ajax/rules',
                method: "POST",
                data: {
                    profileId       : $scope.ids[0],
                    optionId        : $scope.ids[1],
                    optionValueId   : $scope.ids[2]
                },
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                }
            })
                .success(function (data, status, headers) {
                    $scope.sections = data;

                    for(var i = 0; i < $scope.sections.length; i++)
                    {
                        if($scope.sections[i].id == $scope.ids[3])
                        {
                            for(var j = 0; j < $scope.sections[i].attributes.length; j++)
                            {
                                if($scope.sections[i].attributes[j].id == $scope.ids[1])
                                {
                                    for(var k = 0; k < $scope.sections[i].attributes[j].values.length; k++)
                                    {
                                        if($scope.sections[i].attributes[j].values[k].id == $scope.ids[2])
                                        {
                                            $scope.rules = $scope.sections[i].attributes[j].values[k].rules;
                                            $scope.title = $scope.sections[i].attributes[j].values[k].name + ' ' + $scope.sections[i].attributes[j].name;
                                        }
                                    }
                                }
                            }
                        }
                    }


                })
                .error(function (data, status, headers, config) {
                    console.log('error loading');
                });




        }])

        .controller('ModalCtrl', function ($scope, $modal, $log) {

            $scope.open = function (id) {
                var scope = $scope.$new();
                scope.id = id;
                var modalInstance = $modal.open({
                    templateUrl: 'ruleBuilder.html',
                    controller: 'ModalInstanceCtrl',
                    size: 'lg',
                    scope: scope
                });
            };
        })

        .controller('ModalInstanceCtrl', function ($scope, $modalInstance) {

            $scope.done = function () {
                $modalInstance.close();
            };

            $scope.cancel = function () {
                $modalInstance.dismiss('cancel');
            };
        });

</script>
<div ng-controller="ModalCtrl" ng-app="app">
<div class="entry-edit">
<form id="<?php echo $this->getForm()->getId() ?>" action="<?php echo $this->getForm()->getAction() ?>" method="<?php echo strtoupper($this->getForm()->getMethod()) ?>">
    <input type="hidden" id="form_key" name="form_key" value="<?php echo Mage::getSingleton('core/session')->getFormKey(); ?>" />
    <input type="hidden" id="saveUrl" name="saveUrl" value="<?php echo $this->getSaveUrl() ?>" />
    <input type="hidden" id="deleteUrl" name="deleteUrl" value="<?php echo $this->getDeleteUrl() ?>" />
    <?php foreach($_products as $_product): ?>
        <div class="entry-edit-head collapseable">
            <a id="product-<?php echo $_product->getEntityId() ?>-head" href="#" onclick="Fieldset.toggleCollapse('product-<?php echo $_product->getEntityId() ?>', ''); return false;" class="">
                <?php echo $_product->getName() ?>
            </a>
        </div>
        <input id="product-<?php echo $_product->getEntityId() ?>-state" name="config_state[product-<?php echo $_product->getEntityId() ?>]" type="hidden">
        <fieldset class="profileconfiguration collapseable" id="product-<?php echo $_product->getEntityId() ?>" style="display:none">
            <ul>
                <?php $_options = $this->GetProductOptions($_product); ?>
                <?php foreach($_options as $_option): ?>
                    <li id="option-list-item-<?php echo $_option->getOptionId() ?>" class="option-list-item">
                        <ul class="pc-option-value-list">
                            <?php $_values = $_option->getValues(); ?>
                            <?php foreach($_values as $_value): ?>
                                <li>
                                    <div onclick="clickable(this.getElementsByTagName('input')[0])" id="value-list-item-<?php echo $_value->getOptionTypeId() ?>" class="value-list-item<?php echo ($this->doesConfigurationExist($_profile->getProfileId(),$_option->getOptionId(),$_value->getOptionTypeId())) ? ' checktrue' : ''?>">
                                        <h4>
                                            <div>
                                                <?php echo $_value->getTitle() ?>
                                            </div>
                                            <div>
                                                <?php echo $_option->getTitle() ?>
                                            </div>
                                        </h4>
                                        <div>
                                            <input onchange="clickable(this)" type="checkbox" <?php echo ($this->doesConfigurationExist($_profile->getProfileId(),$_option->getOptionId(),$_value->getOptionTypeId())) ? 'checked="checked"' : ''?> />
                                        </div>
                                    </div>
                                    <div>
                                        <a ng-click="open('<?php echo $_profile->getProfileId() . '-' . $_option->getOptionId() . '-' . $_value->getOptionTypeId() . '-' . $_product->getEntityId() ?>')">Manage Rules</a>
                                    </div>
                                 </li>
                             <?php endforeach;?>
                         </ul>
                    </li>
                <?php endforeach;?>
            </ul>
        </fieldset>
    <?php endforeach;?>
</form>
</div>
<div>
    <script type="text/ng-template" id="ruleBuilder.html">
        <div class="rule-list" ng-controller="RuleCtrl">

            <h3 ng-bind="title"></h3>
            <div ng-hide="sections.length"><i class="fa fa-spinner fa-spin"></i> Loading...</div>

            <select ng-show="sections.length" ng-model="sectionOption" ng-options="section.name for section in sections"><option value="">--Select an option--</option></select>
            <select ng-show="sectionOption" ng-model="operatorOption" ng-options="operator.name for operator in operators"></select>
            <select ng-show="operatorOption" ng-model="attributeOption" ng-options="att.name for att in sectionOption.attributes"></select>
            <select ng-show="attributeOption" ng-model="valueOption" ng-options="val.name for val in attributeOption.values"></select>
            <button ng-show="sectionOption && operatorOption && attributeOption&& valueOption" ng-click="add()">Add</button>
            <div ng-show="rules.length" style="margin-top:10px;">
                <h4>{{title}} will be offered as an option if:</h4>
                <ul>
                    <li ng-repeat="rule in rules">
                        <div class="output">
                            <span>{{rule.section.name}}</span>
                            <span class="operator">{{rule.operator.name}}</span>
                            <span class="bold">{{rule.attribute.name}}</span>
                            selection of
                            <span class="bold">{{rule.value.name}}</span>
                            <a href="#" ng-click="removeListItem(rule)">remove</a>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn btn-primary" ng-click="done()">Done</button>
        </div>
    </script>
</div>
</div>
<script>
    var ajax = {};

    ajax.x = function() {
        if (typeof XMLHttpRequest !== 'undefined') {
            return new XMLHttpRequest();
        }
        var versions = [
            "MSXML2.XmlHttp.5.0",
            "MSXML2.XmlHttp.4.0",
            "MSXML2.XmlHttp.3.0",
            "MSXML2.XmlHttp.2.0",
            "Microsoft.XmlHttp"
        ];

        var xhr;
        for(var i = 0; i < versions.length; i++) {
            try {
                xhr = new ActiveXObject(versions[i]);
                break;
            } catch (e) {
            }
        }
        return xhr;
    };

    ajax.send = function(url, callback, method, data, sync) {
        var x = ajax.x();
        x.open(method, url, sync);
        x.onreadystatechange = function() {
            if (x.readyState == 4) {
                callback(x.responseText)
            }
        };
        if (method == 'POST') {
            x.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        }
        x.send(data)
    };

    ajax.get = function(url, data, callback, sync) {
        var query = [];
        for (var key in data) {
            query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));
        }
        ajax.send(url + '?' + query.join('&'), callback, 'GET', null, sync)
    };

    ajax.post = function(url, data, callback, sync) {
        var query = [];
        for (var key in data) {
            query.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));
        }
        ajax.send(url, callback, 'POST', query.join('&'), sync)
    };

    var findAncestor = function(el,cls)
    {
        while ((el = el.parentNode) && !el.classList.contains(cls));
        return el;
    };

    var saveConfig = function(e)
    {
        var optionId = findAncestor(e,'option-list-item').id.replace('option-list-item-','');
        var optionValueId = findAncestor(e,'value-list-item').id.replace('value-list-item-','');

        if(e.checked)
        {
            ajax.post(
                document.getElementById('saveUrl').value,
                {
                    form_key:           document.getElementById('form_key').value,
                    profile_id:         <?php echo $this->_getProfile()->getProfileId() ?>,
                    option_id :         parseInt(optionId),
                    option_value_id:    parseInt(optionValueId)
                },
                function()
                {

                },
                true
            );
        }
        else
        {
            ajax.post(
                document.getElementById('deleteUrl').value,
                {
                    form_key:           document.getElementById('form_key').value,
                    profile_id:         <?php echo $this->_getProfile()->getProfileId() ?>,
                    option_id :         parseInt(optionId),
                    option_value_id:    parseInt(optionValueId)
                },
                function()
                {

                },
                true
            );
        }
    };

    var removeClass = function(node, cls)
    {
        if(node && node.className && node.className.indexOf(cls) >= 0)
        {
            var pattern = new RegExp('\\s*' + cls + '\\s*');
            node.className = node.className.replace(pattern, ' ');
        }
    };

    var classSwap = function(e)
    {
        if(e.checked)
        {
            e.parentNode.parentNode.className = e.parentNode.parentNode.className + " checktrue";
        }
        else
        {
            removeClass(e.parentNode.parentNode,'checktrue');
        }
    };

    var clickable = function(e)
    {
        e.checked = !e.checked;
        classSwap(e);
        saveConfig(e);
    };

    var submitGrid = function(stayOnPage)
    {
        var input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'back';
        input.value = stayOnPage;

        document.getElementById('<?php echo $this->getDestElementId()?>').appendChild(input);
        document.getElementById('<?php echo $this->getDestElementId()?>').submit();
    };
</script>


